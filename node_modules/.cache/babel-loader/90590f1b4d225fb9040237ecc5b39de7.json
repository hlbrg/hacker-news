{"ast":null,"code":"var _jsxFileName = \"/Users/hlbrg/Documents/ISOBAR/create-react-app/my-app/src/components/HackerNews.js\";\nimport * as React from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIRST_500_STORIES_API_URL = \"https://hacker-news.firebaseio.com/v0/topstories.json\";\nconst STORY_URL = \"https://hacker-news.firebaseio.com/v0/item/\"; //${id}.json\";\n\nconst AUTHOR_URL = \"https://hacker-news.firebaseio.com/v0/user/\"; //${id}.json\";\n\nconst ARTICLE_COUNT = 10;\nconst ORDER = \"ASC\"; //OR DESC\n\nexport default class HackerNews extends React.Component {\n  constructor(props) {\n    super(props);\n    this.articleList = [];\n    this.state = {\n      articleComponents: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.articleComponents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  getRandomBetween(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  }\n\n  getArticleIds(ids) {\n    if (!ids) return [];\n    let selectedArray = [];\n\n    for (let i = 0; i < this.articleCount; i++) selectedArray.push(ids[this.getRandomBetween(0, ids.length - 1)]);\n\n    return selectedArray;\n  }\n\n  updateState() {\n    this.setState({\n      articleComponents: this.articleList.map(article => /*#__PURE__*/_jsxDEV(NewsItem, {\n        article: article\n      }, article.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this))\n    });\n  }\n\n  onAuthor(article, author) {\n    article.author = author;\n    this.articleList.push(article);\n    this.articleList.sort(this.sortArticles);\n    this.updateState();\n  }\n\n  getAuthor(article) {\n    if (!article) return;\n\n    if (!article.by) {\n      this.onAuthor(article, {\n        karma: -1\n      }); //setting a dummy author to help ordering of the articles\n    }\n\n    fetch(AUTHOR_URL + article.by + \".json\").then(res => res.json()).then(result => {\n      this.onAuthor(article, result);\n    }, error => {\n      console.log(\"result error \", error);\n    });\n  }\n\n  onArticle(article) {\n    this.getAuthor(article);\n  }\n\n  sortArticles(a, b) {\n    return a.author.karma === b.author.karma ? 0 : a.author.karma > b.author.karma ? 1 : -1;\n  }\n\n  loadArticles(ids) {\n    let articleIds = this.getArticleIds(ids);\n\n    for (let articleIndex = 0; articleIndex < articleIds.length; articleIndex++) fetch(STORY_URL + articleIds[articleIndex] + \".json\").then(res => res.json()).then(result => {\n      this.onArticle(result);\n    }, error => {\n      console.log(\"result error \", error);\n    });\n  }\n\n  componentDidMount() {\n    this.articleCount = this.props.config && this.props.config.articleCount || ARTICLE_COUNT;\n    this.order = this.props.config && this.props.config.order || ORDER;\n    fetch(FIRST_500_STORIES_API_URL).then(res => res.json()).then(result => {\n      this.loadArticles(result);\n    }, error => {\n      console.log(\"result error \", error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/hlbrg/Documents/ISOBAR/create-react-app/my-app/src/components/HackerNews.js"],"names":["React","NewsItem","FIRST_500_STORIES_API_URL","STORY_URL","AUTHOR_URL","ARTICLE_COUNT","ORDER","HackerNews","Component","constructor","props","articleList","state","articleComponents","render","getRandomBetween","min","max","Math","floor","random","getArticleIds","ids","selectedArray","i","articleCount","push","length","updateState","setState","map","article","id","onAuthor","author","sort","sortArticles","getAuthor","by","karma","fetch","then","res","json","result","error","console","log","onArticle","a","b","loadArticles","articleIds","articleIndex","componentDidMount","config","order"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport NewsItem from \"./NewsItem\";\n\nconst FIRST_500_STORIES_API_URL = \"https://hacker-news.firebaseio.com/v0/topstories.json\";\nconst STORY_URL = \"https://hacker-news.firebaseio.com/v0/item/\";//${id}.json\";\nconst AUTHOR_URL = \"https://hacker-news.firebaseio.com/v0/user/\";//${id}.json\";\nconst ARTICLE_COUNT = 10;\nconst ORDER = \"ASC\"; //OR DESC\n\nexport default class HackerNews extends React.Component {\n    articleCount;\n    order;\n    articleList = [];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articleComponents:[]\n        }\n    }\n\n    render() {\n        return <div>\n            {this.state.articleComponents}\n        </div>;\n    }\n\n    getRandomBetween(min, max) {\n        return Math.floor(Math.random() * max) + min;\n    }\n\n    getArticleIds(ids) {\n        if (!ids) return [];\n        let selectedArray = [];\n        for (let i = 0; i < this.articleCount; i++)\n            selectedArray.push(ids[this.getRandomBetween(0, ids.length - 1)])\n        return selectedArray;\n    }\n\n    updateState() {\n        this.setState({\n            articleComponents: this.articleList.map((article) =>\n                <NewsItem key={article.id} article={article}/>\n            )\n        })\n    }\n\n    onAuthor(article, author) {\n        article.author = author\n        this.articleList.push(article)\n        this.articleList.sort(this.sortArticles)\n        this.updateState();\n    }\n\n    getAuthor(article) {\n        if (!article) return\n        if (!article.by) {\n            this.onAuthor(article, {karma: -1})//setting a dummy author to help ordering of the articles\n        }\n        fetch(AUTHOR_URL + article.by + \".json\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.onAuthor(article, result)\n                },\n                (error) => {\n                    console.log(\"result error \", error)\n                }\n            )\n    }\n\n    onArticle(article) {\n        this.getAuthor(article)\n    }\n\n    sortArticles(a, b) {\n        return a.author.karma === b.author.karma ? 0 : (a.author.karma > b.author.karma ? 1 : -1 );\n    }\n\n    loadArticles(ids) {\n        let articleIds = this.getArticleIds(ids)\n        for (let articleIndex = 0; articleIndex < articleIds.length; articleIndex++)\n            fetch(STORY_URL + articleIds[articleIndex] + \".json\")\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.onArticle(result)\n                    },\n                    (error) => {\n                        console.log(\"result error \", error)\n                    }\n                )\n    }\n\n    componentDidMount() {\n        this.articleCount = (this.props.config && this.props.config.articleCount) || ARTICLE_COUNT\n        this.order = (this.props.config && this.props.config.order) || ORDER\n        fetch(FIRST_500_STORIES_API_URL)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.loadArticles(result)\n                },\n                (error) => {\n                    console.log(\"result error \", error)\n                }\n            )\n    }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}